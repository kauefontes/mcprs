
[package]
name = "mcprs"
version = "0.1.0"
edition = "2021"
description = "Model Context Protocol para Rust - Uma biblioteca unificada para comunicação com diferentes LLMs e APIs de IA"
authors = ["Kauê Pereira <kauefontes@outlook.com>"]
license = "MIT"
repository = "https://github.com/kauefontes/mcprs"
documentation = "https://docs.rs/mcprs"
readme = "README.md"
keywords = ["ai", "llm", "openai", "deepseek", "nlp", "mcp"]
categories = ["api-bindings", "web-programming", "asynchronous"]

[dependencies]
axum = { version = "0.6.18", features = ["headers", "multipart"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tokio = { version = "1", features = ["full"] }
tokio-stream = "0.1"
tracing = "0.1"
tracing-subscriber = "0.3"
reqwest = { version = "0.11", features = ["json", "rustls-tls", "stream"] }
async-trait = "0.1"
thiserror = "1.0"
mockall = "0.11"
futures = "0.3"
bytes = "1.4"
tower = "0.4"
tower-http = { version = "0.3", features = ["cors", "trace"] }
uuid = { version = "1.3", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
http = "0.2"
hyper = { version = "0.14", features = [
    "full",
] } # Adicionado para resolver os erros E0433

[dev-dependencies]
tokio = { version = "1", features = ["full", "test-util"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
reqwest = { version = "0.11", features = ["json", "rustls-tls"] }
mockall = "0.11"
http = "0.2"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
